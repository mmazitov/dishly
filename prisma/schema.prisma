// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Модель пользователя
model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId // Уникальный идентификатор пользователя (ObjectId)
  email        String     @unique // Электронная почта пользователя (уникальная)
  password     String // Пароль пользователя
  name         String // Имя пользователя
  profileImage String? // Изображение профиля пользователя (необязательное поле)
  createdAt    DateTime   @default(now()) // Дата создания пользователя (по умолчанию текущее время)
  favorites    Favorite[] // Список избранных блюд пользователя
  menus        Menu[] // Список меню, созданных пользователем
}

// Модель блюда
model Dish {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId // Уникальный идентификатор блюда (ObjectId)
  name        String     @unique // Название блюда (уникальное)
  description String // Описание блюда
  image       String? // Изображение блюда (необязательное поле)
  createdAt   DateTime   @default(now()) // Дата создания блюда (по умолчанию текущее время)
  products    Product[] // Список продуктов, относящихся к этому блюду
  favorites   Favorite[] // Список пользователей, добавивших это блюдо в избранное
  Menu        Menu?      @relation(fields: [menuId], references: [id]) // Связь с меню, к которому относится это блюдо
  menuId      String?    @db.ObjectId // Идентификатор меню (если оно есть)
}

// Модель продукта
model Product {
  id       String @id @default(auto()) @map("_id") @db.ObjectId // Уникальный идентификатор продукта (ObjectId)
  name     String @unique // Название продукта (уникальное)
  quantity Float // Количество продукта (порция на одного человека)
  dish     Dish   @relation(fields: [dishId], references: [id]) // Связь с блюдом, к которому относится этот продукт
  dishId   String @db.ObjectId // Идентификатор блюда, к которому относится этот продукт
}

// Модель меню
model Menu {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // Уникальный идентификатор меню (ObjectId)
  name      String   @unique // Название меню (уникальное)
  image     String? // Изображение меню (необязательное поле)
  createdAt DateTime @default(now()) // Дата создания меню (по умолчанию текущее время)
  user      User     @relation(fields: [userId], references: [id]) // Связь с пользователем, создавшим меню
  userId    String   @db.ObjectId // Идентификатор пользователя, создавшего меню
  dishes    Dish[] // Список блюд, входящих в это меню
}

// Модель избранного блюда
model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // Уникальный идентификатор записи (ObjectId)
  user      User     @relation(fields: [userId], references: [id]) // Связь с пользователем, который добавил блюдо в избранное
  userId    String   @db.ObjectId // Идентификатор пользователя
  dish      Dish     @relation(fields: [dishId], references: [id]) // Связь с блюдом, добавленным в избранное
  dishId    String   @db.ObjectId // Идентификатор блюда
  createdAt DateTime @default(now()) // Дата добавления блюда в избранное (по умолчанию текущее время)
}
